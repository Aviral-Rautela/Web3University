type UserRole = variant {
  Student;
  Teacher;
};

type User = record {
  id: text;
  name: text;
  role: UserRole;
  bio: text;
  profile_photo: text;
  created_at: nat64;
};

type Question = record {
  id: text;
  question: text;
  options: vec text;
  correct_answer: nat32;
  points: nat32;
};

type Lesson = record {
  id: text;
  title: text;
  content: text;
  video_url: opt text;
  quiz_id: opt text;
  order: nat32;
};

type Course = record {
  id: text;
  title: text;
  description: text;
  instructor_id: text;
  instructor_name: text;
  lessons: vec Lesson;
  created_at: nat64;
  updated_at: nat64;
};

type Quiz = record {
  id: text;
  course_id: text;
  lesson_id: text;
  title: text;
  questions: vec Question;
  passing_score: nat32;
  created_at: nat64;
};

type Enrollment = record {
  student_id: text;
  course_id: text;
  enrolled_at: nat64;
  completed_lessons: vec text;
  progress_percentage: nat32;
  completed: bool;
  certificate_issued: bool;
};

type QuizAttempt = record {
  student_id: text;
  quiz_id: text;
  answers: vec nat32;
  score: nat32;
  passed: bool;
  attempted_at: nat64;
};

type Reply = record {
  id: text;
  author_id: text;
  author_name: text;
  content: text;
  created_at: nat64;
};

type Discussion = record {
  id: text;
  course_id: text;
  author_id: text;
  author_name: text;
  title: text;
  content: text;
  replies: vec Reply;
  created_at: nat64;
};

type Certificate = record {
  student_id: text;
  course_id: text;
  course_title: text;
  student_name: text;
  instructor_name: text;
  issued_at: nat64;
  certificate_hash: text;
};

type Result = variant {
  Ok: User;
  Err: text;
};

type Result_1 = variant {
  Ok: Course;
  Err: text;
};

type Result_2 = variant {
  Ok: Enrollment;
  Err: text;
};

type Result_3 = variant {
  Ok: Quiz;
  Err: text;
};

type Result_4 = variant {
  Ok: QuizAttempt;
  Err: text;
};

type Result_5 = variant {
  Ok: Discussion;
  Err: text;
};

type Result_6 = variant {
  Ok: Certificate;
  Err: text;
};

type Result_7 = variant {
  Ok: null;
  Err: text;
};

service : {
  create_user: (text, UserRole, text, text) -> (Result);
  get_user: () -> (opt User) query;
  update_user_profile: (text, text, text) -> (Result);
  
  create_course: (text, text) -> (Result_1);
  get_all_courses: () -> (vec Course) query;
  get_course: (text) -> (opt Course) query;
  search_courses: (text) -> (vec Course) query;
  add_lesson_to_course: (text, text, text, opt text, nat32) -> (Result_7);
  
  enroll_in_course: (text) -> (Result_2);
  get_student_enrollments: () -> (vec Enrollment) query;
  mark_lesson_completed: (text, text) -> (Result_7);
  
  create_quiz: (text, text, text, vec Question, nat32) -> (Result_3);
  get_quiz: (text) -> (opt Quiz) query;
  attempt_quiz: (text, vec nat32) -> (Result_4);
  
  create_discussion: (text, text, text) -> (Result_5);
  get_course_discussions: (text) -> (vec Discussion) query;
  reply_to_discussion: (text, text) -> (Result_7);
  
  issue_certificate: (text) -> (Result_6);
  get_student_certificates: () -> (vec Certificate) query;
  verify_certificate: (text) -> (opt Certificate) query;
}